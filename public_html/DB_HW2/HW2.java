/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HW2.java
 *
 * Created on Mar 20, 2013, 6:00:26 PM
 */
package databasehw2;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

/**
 *
 * @author user
 */
public class HW2 extends javax.swing.JFrame {

    /** Creates new form HW2 */
    Image img;
    ImageIcon ii;
     ArrayList<Integer> poly_cord= new ArrayList<Integer>();
     
     Boolean range_query_selected= false;
     Boolean closest_fire_hydrant_selected=false;
      int count=1;  int x1=0,y1=0,x2=0,y2=0; int xfirst = 0,yfirst = 0;
      Polygon p1= new Polygon();
  
    
    
    public HW2() {
        initComponents();
      //  jLabel1.setIcon(null);
       // this.jLabelImage.setIcon(new ImageIcon(img));
         ImageIcon imgi = new ImageIcon("C:\\Users\\user\\Desktop\\Database 585 syllabus and notes\\homework\\homework2_final\\map.jpg");
         ii=imgi;
        jLabel1.setIcon(imgi);
        img=imgi.getImage();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Neelam Aggarwal 6667974120");
        setAlwaysOnTop(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(820, 580));

        jLabel1.setToolTipText("");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel1MouseMoved(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTextField1.setText("CURRENT MOUSE POSITION ON THE IMAGE");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Active Feature Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 14))); // NOI18N

        jCheckBox1.setText("BUILDINGS");
        jCheckBox1.setName(""); // NOI18N

        jCheckBox2.setText("BUILDINGS ON FIRE");

        jCheckBox3.setText("HYDRANTS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                .addGap(67, 67, 67))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox2)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox3)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Query", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria Math", 1, 14))); // NOI18N

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("WHOLE REGION");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("RANGE QUERY");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("FIND NEIGHBOUR BUILDINGS");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("FIND CLOSETS FIRE HYDRANTS");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18))
        );

        jButton1.setText("SUBMIT QUERY");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("SQL QUERIES");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1073, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseMoved
       int xpos = evt.getX();
        int ypos = evt.getY();
        String xy_pos= "Current mouse location:("+xpos+","+ypos+")";
        jTextField1.setText(xy_pos);
       
    }//GEN-LAST:event_jLabel1MouseMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//       
        
//        Graphics g= jLabel1.getGraphics();
//        super.paint(g);
        
//        int w = img.getWidth();
//        int h = old.getHeight();
//        BufferedImage img = new BufferedImage(
//            w, h, BufferedImage.TYPE_INT_ARGB);
//        Graphics2D g2d = img.createGraphics();
//        g2d.drawImage(old, 0, 0, null);
//        g2d.setPaint(Color.red);
        
//         int a[]={607,641,617,584};
//         int b[]={199,217,257,239};
//        g1.drawPolygon(a,b,4);
//        
//        
        
        
       // System.out.println(cord);
//        
//        int size=wr.size();
        
      //  4, 607, 199, 641, 217, 617, 257, 584, 239
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
//       jLabel1.setIcon(ii);
        Graphics g= jLabel1.getGraphics();
        // super.paint(g);
        g.drawImage(img,0 , 0, this);
        //jLabel1.repaint();
     // SwingUtilities.updateComponentTreeUI(jLabel1);
//        frame.invalidate();
//frame.validate();

        if(jRadioButton1.isSelected())
        {
            
                    if(jCheckBox1.isSelected())
                {
                     ArrayList<Integer> cord= new ArrayList<Integer>();
                    ArrayList<Integer> vertex= new ArrayList<Integer>();
                      // String s="YELLOW";
                     populate pd= new populate();
                     pd.connectDB();
                    cord= pd.wholeRegion();
                    vertex = pd.wholeRegion1();
                     logistic_building(cord,vertex,Color.YELLOW);
        //          
                    System.out.print("hello after calling");
        //            System.out.println("cord" + cord + "\n cord size" + cord.size());
        //            System.out.println("vertex"+vertex + "\n size" + vertex.size());


                }
                if(jCheckBox2.isSelected())
                {
                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    ArrayList<Integer> vertex= new ArrayList<Integer>();
                     // String s="RED";
                     populate pd= new populate();
                     pd.connectDB();
                    cord= pd.WR_buildingfire();
                    vertex = pd.WR_buildingfire1();
                    logistic_building(cord,vertex,Color.RED);

        //            System.out.print("hello after calling");
        //            System.out.println("cord" + cord + "\n cord size" + cord.size());
        //            System.out.println("vertex"+vertex + "\n size" + vertex.size());

                }
                if(jCheckBox3.isSelected())
                {


                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    populate pd= new populate();
                    //ArrayList<Integer> vertex= new ArrayList<Integer>();
                    System.out.print("hello before calling");
                    pd.connectDB();
        //            cord= pd.wholeRegion();
                    cord = pd.WR_hydrant();
                    System.out.print("hello after calling");
                    System.out.println("cord" + cord + "\n cord size" + cord.size());
                    //System.out.println("vertex"+vertex + "\n size" + vertex.size());
                    logistic_hydrant(cord);

                }

            
        }
        else if(jRadioButton2.isSelected())
        {
                if(jCheckBox1.isSelected())
                {
                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    ArrayList<Integer> vertex= new ArrayList<Integer>();
                    Queries q=new Queries();
                    cord= q.Range_Query(poly_cord);
                    vertex = q.Range_Query_vertex(poly_cord);
                    logistic_building(cord,vertex,Color.YELLOW);
                }
            
                if(jCheckBox2.isSelected())
                {
                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    ArrayList<Integer> vertex= new ArrayList<Integer>();
                    Queries q=new Queries();
                    cord= q.Range_Query_fire(poly_cord);
                    vertex = q.Range_Query_fire_vertex(poly_cord);
                    logistic_building(cord,vertex,Color.RED);
                }
                if(jCheckBox3.isSelected())
                {
                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    populate pd= new populate();
                    //ArrayList<Integer> vertex= new ArrayList<Integer>();
                    System.out.print("hello before calling");
                    Queries q=new Queries();
                    cord= q.Range_Query_hydrant(poly_cord);
                    System.out.print("hello after calling");
                    System.out.println("cord" + cord + "\n cord size" + cord.size());
                    //System.out.println("vertex"+vertex + "\n size" + vertex.size());
                    logistic_hydrant(cord);
                }
                
        }
        else if(jRadioButton3.isSelected())
        {
            if(jCheckBox1.isSelected())
                {
                    ArrayList<Integer> cord= new ArrayList<Integer>();
                    ArrayList<Integer> vertex= new ArrayList<Integer>();
                    Queries q=new Queries();
                    cord= q.neighbour_building();
                    vertex = q.neighbour_building_vertex();
                    logistic_building(cord,vertex,Color.YELLOW);
                    populate p= new populate();
                    p.connectDB();
                    cord=p.WR_buildingfire();
                    vertex=p.WR_buildingfire1();
                    logistic_building(cord,vertex,Color.RED);
                }
                
            
        }
        else if(jRadioButton4.isSelected())
        {
            if(jCheckBox1.isSelected())
                {
                    
                }
        }
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
      
        if(range_query_selected==true)
        {
            Graphics g1 = jLabel1.getGraphics();
            g1.setColor(Color.RED);
            p1.addPoint(evt.getX(),evt.getY());

            if(SwingUtilities.isLeftMouseButton(evt))
            {

                 if(count==1)
                    {
                         x1= evt.getX();
                         y1= evt.getY();

                         System.out.println(x1+"," +y1);
                         xfirst=x1;
                         yfirst=y1;
                        count++;
                    }
                 else if(count>=2)
                    {
                         x2=evt.getX();
                         y2= evt.getY();

                          System.out.println(x2+ ","+y2);
                         count++;
                         g1.drawLine(x1, y1, x2, y2);
                         x1=x2;
                         y1=y2;

                    }
                
            }

              if(SwingUtilities.isRightMouseButton(evt))
              {
                  x1= evt.getX();
                  y1= evt.getY();

                   System.out.println(x1+" "+y1);
                  g1.drawLine(x2, y2, x1, y1);
                  g1.drawLine(x1, y1, xfirst, yfirst);
                 //  boolean found= p1.contains(100,100);
                   g1.setColor(Color.green);
               //  g1.drawPolygon(p1);
              //  System.out.println(found);
                //System.out.println(p1.xpoints[0]+","+p1.xpoints[1]+","+p1.ypoints[0]+","+p1.xpoints[1]);
                System.out.println(p1.npoints);
                for(int i=0;i<p1.npoints;i++)
                {
                     System.out.print("inside loop");
                    System.out.println(p1.xpoints[i]+","+p1.ypoints[i]);
                    poly_cord.add(p1.xpoints[i]);

                    poly_cord.add(p1.ypoints[i]);

                }
                System.out.println(poly_cord);
                  System.out.println("tostirng"+poly_cord.toString());
                   range_query_selected=false;
             //   s= "poly_cord";


              }
        //  poly_cord_func();
       
        }
        if(closest_fire_hydrant_selected==true)
        {
            String s;
            int x = evt.getX();
            int y = evt.getY();
            s=x+","+y;
            ArrayList<Integer> cord= new ArrayList<Integer>();
            ArrayList<Integer> vertex= new ArrayList<Integer>();
            Queries q=new Queries();
            cord= q.closest_fire_hydrant_building(s);
            vertex = q.closest_fire_hydrant_building_vertex(s);
            logistic_building(cord,vertex,Color.RED);
            String s1 = "";
             for(int i=0;i<cord.size();i++)
             {
                 s1+=cord.get(i)+",";
             }
             s1+=cord.get(0)+","+cord.get(1);
             System.out.println("inside range query step2"+s1);
             ArrayList<Integer> cord1= new ArrayList<Integer>();
             cord1= q.closest_fire_hydrant(s1);
             logistic_hydrant(cord1);
             //closest_fire_hydrant_selected=false;
            
        }
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
    
         String sql1="SELECT t.X,t.Y FROM building B, building G, TABLE(SDO_UTIL.GETVERTICES(B.shape)) t "
                                + "WHERE SDO_WITHIN_DISTANCE "
                                + "(B.shape,G.shape,'DISTANCE=100')='TRUE' "
                                + "AND G.building_on_fire='y' \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(B.shape)) FROM building B, building G "
                                + "WHERE SDO_WITHIN_DISTANCE "
                                + "(B.shape,G.shape,'DISTANCE=100')='TRUE' "
                                + "AND G.building_on_fire='y' \n\n" ;
          jTextArea1.setText(sql1);
        Graphics g= jLabel1.getGraphics();
        // super.paint(g);
        g.drawImage(img,0 , 0, this);
    
    }
    public void logistic_hydrant(ArrayList<Integer> cord)
    {
         Graphics g1 = jLabel1.getGraphics();
            g1.setColor(Color.GREEN);
            //populate pd= new populate();
          //  ArrayList<Integer> cord= new ArrayList<Integer>();
            //ArrayList<Integer> vertex= new ArrayList<Integer>();
            System.out.print("hello before calling");
           // pd.connectDB();
//            cord= pd.wholeRegion();
            //cord = pd.WR_hydrant();
            System.out.print("hello after calling");
            System.out.println("cord" + cord + "\n cord size" + cord.size());
            //System.out.println("vertex"+vertex + "\n size" + vertex.size());
            int count=0;
            int i=0;
            
            for(int j=0;j<cord.size();j=j+2)
            {
                Rectangle r= new Rectangle();
                r.add(cord.get(j), cord.get(j+1));
                g1.fillRect(cord.get(j), cord.get(j+1), 15,15);
                
            }
        
    }
        // TODO add your handling code here:}//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
      
       String sql1= "SELECT t.X,t.Y FROM building Tb, TABLE(SDO_UTIL.GETVERTICES(Tb.shape)) t \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(shape)) from building \n \n" +

"SELECT t.X,t.Y FROM building Tb, TABLE(SDO_UTIL.GETVERTICES(Tb.shape)) t where building_on_fire='y' \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(shape)) from building where building_on_fire='y' \n\n" +
			
 "SELECT t.X,t.Y FROM hydrant Tb, TABLE(SDO_UTIL.GETVERTICES(Tb.coord)) t  \n ";
       
       jTextArea1.setText(sql1);
        
        Graphics g= jLabel1.getGraphics();
        // super.paint(g);
        g.drawImage(img,0 , 0, this);
        
        
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
      
       String sql1= "SELECT t.X,t.Y FROM building B, TABLE(SDO_UTIL.GETVERTICES(B.shape)) t "
                        + "WHERE sdo_relate(B.shape, "
                        + "SDO_Geometry (2003, null, null,SDO_ELEM_INFO_ARRAY(1,1003,1),"
                        + "SDO_ORDINATE_ARRAY(s1)), "
                        + "'mask=ANYINTERACT') = 'TRUE' \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(shape)) FROM building B "
                        + "WHERE sdo_relate(B.shape, "
                        + "SDO_Geometry (2003, null, null,SDO_ELEM_INFO_ARRAY(1,1003,1),"
                        + "SDO_ORDINATE_ARRAY(s1)), "
                        + "'mask=ANYINTERACT') = 'TRUE' \n\n" +

"Select t.X,t.Y FROM building B, TABLE(SDO_UTIL.GETVERTICES(B.shape)) t "
                                + "WHERE sdo_relate( b.shape,"
                                + "SDO_Geometry (2003, null, null,SDO_ELEM_INFO_ARRAY(1,1003,1),"
                                + "SDO_ORDINATE_ARRAY(s1)), "
                                + "'mask=ANYINTERACT') = 'TRUE' and "
                                + "b.building_on_fire ='y' \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(shape)) FROM building B "
                        + "WHERE sdo_relate(B.shape, "
                        + "SDO_Geometry (2003, null, null,SDO_ELEM_INFO_ARRAY(1,1003,1),"
                        + "SDO_ORDINATE_ARRAY(s1)), "
                        + "'mask=ANYINTERACT') = 'TRUE' and b.building_on_fire='y' \n\n" +
                        
"select t.X,t.Y FROM hydrant h, TABLE(SDO_UTIL.GETVERTICES(h.coord)) t "
                                + "WHERE sdo_relate( h.coord,"
                                + "SDO_Geometry (2003, null, null,SDO_ELEM_INFO_ARRAY(1,1003,1),"
                                + "SDO_ORDINATE_ARRAY(s1)), "
                                + "'mask=ANYINTERACT') = 'TRUE' \n";
        jTextArea1.setText(sql1);
        Graphics g= jLabel1.getGraphics();
        // super.paint(g);
        g.drawImage(img,0 , 0, this);
        range_query_selected=true;
        
        
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        
        String sql1= "SELECT t.X,t.Y FROM building B, TABLE(SDO_UTIL.GETVERTICES(B.shape)) t "
                                + "WHERE SDO_CONTAINS(b.shape, "
                                + "SDO_Geometry (2001,null,"
                                + "SDO_POINT_TYPE(c,null),null,null)) = 'TRUE' \n" +
"SELECT (SDO_UTIL.GETNUMVERTICES(b.shape)) FROM building b "
                                + "WHERE SDO_CONTAINS(b.shape,"
                                + " SDO_Geometry (2001,null,"
                                + "SDO_POINT_TYPE(c,null),null,null)) = 'TRUE' \n\n" +

"SELECT t.X,t.Y FROM hydrant h, TABLE(SDO_UTIL.GETVERTICES(h.coord)) t "
                                + " WHERE SDO_NN(h.coord,"
                                + " SDO_Geometry (2003,null,null,"
                                + "SDO_ELEM_INFO_ARRAY(1,1003,1),"
                                + "SDO_ORDINATE_ARRAY(c)),'sdo_num_res=1') = 'TRUE'";
        
          jTextArea1.setText(sql1);
        
        Graphics g= jLabel1.getGraphics();
        // super.paint(g);
        g.drawImage(img,0 , 0, this);
        closest_fire_hydrant_selected=true;
        range_query_selected=false;
        
    }//GEN-LAST:event_jRadioButton4ActionPerformed
      public void logistic_building(ArrayList<Integer> cord,ArrayList<Integer> vertex,Color s)
      {
            //Color s;
            Graphics2D g1 =  (Graphics2D) jLabel1.getGraphics();
            g1.setColor(s);
           g1.setStroke(new BasicStroke(2));
           // Queries q= new Queries();
            
//            System.out.print("hello before calling");
            //pd.connectDB();
            
//            System.out.print("hello after calling");
//            System.out.println("cord" + cord + "\n cord size" + cord.size());
//            System.out.println("vertex"+vertex + "\n size" + vertex.size());
            int count=0;
            int i=0;
                for(int j= 0; j<vertex.size(); j++)
                {
//                    for(int i =0 ; i< vertex.get(j); i++)
                    {
                        Polygon p= new Polygon();
                        count = 0;
                        while(vertex.get(j)*2 >count)
                        {

                         p.addPoint(cord.get(i), cord.get(i+1));
                         i+=2;
                         count+=2;
                        }
                        //System.out.println(cord);
                        //System.out.println(p.npoints);
                        g1.drawPolygon(p);
                    }
                }
            
        
      }
      public void wholeRegion()
      {
      }
   
    
    
    //BufferedImage bf;
    //    @Override
//   public void paint(Graphics g)
//    {
//       
//   bf = new BufferedImage( this.getWidth(),this.getHeight(), BufferedImage.TYPE_INT_RGB);
//
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
      
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new HW2().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
